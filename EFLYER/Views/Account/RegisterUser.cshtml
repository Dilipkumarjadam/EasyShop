@model EFLYER.DTOs.RegisteredUserDTO

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Register User</title>
    <link rel="stylesheet" type="text/css" href="~/css/Register.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <style>
        /* General body styling */
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #f9a825, #f57f17); /* Yellow to orange gradient */
            background-size: 400% 400%; /* Ensure smooth animation */
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            overflow: hidden;
            animation: gradientAnimation 10s ease infinite; /* Apply animation */
        }

        /* Keyframes for gradient background animation */
        @@keyframes gradientAnimation {
            0% {
                background: linear-gradient(135deg, #f9a825, #f57f17);
            }

            50% {
                background: linear-gradient(135deg, #f57f17, #f9a825);
            }

            100% {
                background: linear-gradient(135deg, #f9a825, #f57f17);
            }
        }

        /* Keyframes for glow effect */
        @@keyframes glow {
            0% {
                box-shadow: 0 0 5px rgba(255, 140, 0, 0.6);
            }

            100% {
                box-shadow: 0 0 15px rgba(255, 140, 0, 0.8);
            }
        }

        /* Centered container for the form */
        .container {
            width: 100%;
            max-width: 800px; /* Increased width for better form spacing */
            background: #ffffff; /* Solid white background for the form */
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
            overflow: hidden; /* Ensure no overflow */
        }

        /* Style the form container */
        .form-container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        /* Style the form headings */
        h2 {
            margin-top: 0;
            text-align: center;
            color: #f57f17; /* Classic orange color */
            font-size: 28px;
            font-weight: 700;
        }

        /* Style form labels */
        .control-label {
            font-weight: 500;
            color: #555;
            display: block;
            width: 30%; /* Width for labels */
            text-align: right;
            padding-right: 10px; /* Space between label and input */
            margin-bottom: 0;
        }

        /* Style form groups */
        .form-group {
            display: flex;
            align-items: center;
            margin-bottom: 1rem;
        }

        /* Style form controls */
        .form-control {
            border-radius: 8px;
            border: 1px solid #ddd;
            padding: 12px;
            font-size: 16px;
            width: 70%; /* Input width */
            box-sizing: border-box; /* Ensure padding and border are included in the width */
            transition: border-color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
            background: #ffffff;
        }

            .form-control:focus {
                border-color: #f57f17;
                outline: none;
                box-shadow: 0 0 8px rgba(255, 87, 34, 0.5);
                animation: glow 1.5s infinite alternate; /* Add glow effect on focus */
            }

        /* Style the submit button */
        .btn-primary {
            background: linear-gradient(135deg, #f9a825, #f57f17); /* Classic yellow to orange gradient */
            border: none;
            color: #ffffff;
            padding: 14px;
            border-radius: 8px;
            font-size: 18px; /* Increased font size for better visibility */
            cursor: pointer;
            transition: background-color 0.3s, box-shadow 0.3s, transform 0.3s;
            width: 100%; /* Full width to match form controls */
            box-sizing: border-box; /* Ensure padding and border are included in the width */
        }

            .btn-primary:hover {
                background: linear-gradient(135deg, #f57f17, #f9a825); /* Reverse gradient for hover effect */
                box-shadow: 0 12px 24px rgba(0, 0, 0, 0.3);
                transform: scale(1.05); /* Slightly larger on hover */
            }

        /* Style the back to login button */
        .btn-link {
            display: block;
            text-align: center;
            margin-top: 15px;
            color: #f57f17;
            text-decoration: none;
            font-size: 16px;
            padding: 10px;
            border-radius: 8px;
            border: 1px solid #f57f17;
            background: #ffffff;
            transition: color 0.3s, background 0.3s, border-color 0.3s;
        }

            .btn-link:hover {
                color: #ffffff;
                background: #f57f17;
                border-color: #f57f17;
            }

        /* Style the alert messages */
        .alert {
            margin-bottom: 1.5rem;
            border-radius: 8px;
            padding: 10px;
            color: #721c24;
            background-color: #f8d7da;
            border: 1px solid #f5c6cb;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .text-danger {
            color: red; /* Red color for validation messages */
            font-size: 14px; /* Slightly smaller font size for validation messages */
            margin-top: 5px; /* Space above the message */
        }
    </style>
</head>
<body>

    @using (Html.BeginForm("RegisterUser", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="container">
            <h2><i class="fas fa-user-plus"></i> REGISTER</h2>

            <hr />
            <div class="form-horizontal">
                @if (ViewBag.EmailError != null)
                {
                    <div class="alert alert-danger">
                        @ViewBag.EmailError
                    </div>
                }

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CountryRId, "Country", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.CountryRId, ViewBag.DROP as SelectList, "-SELECT-", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CountryRId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ImagePath, "Image", htmlAttributes: new { @class = "control-label" })
                    <input type="file" name="IMAGE" class="form-control" />
                    @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <input type="submit" value="Register" class="btn-primary" />
                </div>

                <a href="@Url.Action("Login", "Account")" class="btn-link">BACK TO LOGIN</a>
            </div>
        </div>
    }

</body>

</html>
